/**
 * This file is generated by the RequestConfigGenerator.
 * Do not edit.
 */
import { Request, RequestParams } from '@gopowerteam/http-request'
import type { Observable } from 'rxjs'
import { TrainingController } from '@/http/controller/learn-service/training.controller'

export class TrainingService {
  /**
   * 活动详情
   */
  @Request({
    server: TrainingController.getTrainingDetail,
  })
  public getTrainingDetail(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 更新活动
   */
  @Request({
    server: TrainingController.update,
  })
  public update(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 用户签到
   */
  @Request({
    server: TrainingController.trainingSignIn,
  })
  public trainingSignIn(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 更新活动状态
   */
  @Request({
    server: TrainingController.changeStatus,
  })
  public changeStatus(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 活动列表(全部)
   */
  @Request({
    server: TrainingController.getTrainings,
  })
  public getTrainings(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 创建活动
   */
  @Request({
    server: TrainingController.createTraining,
  })
  public createTraining(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 学员例表
   */
  @Request({
    server: TrainingController.getAllStudent,
  })
  public getAllStudent(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 增加临时学员
   */
  @Request({
    server: TrainingController.addStudent,
  })
  public addStudent(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 获取全部的问题
   */
  @Request({
    server: TrainingController.getAllQuestions,
  })
  public getAllQuestions(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 给培训增加提问
   */
  @Request({
    server: TrainingController.postQuestionof,
  })
  public postQuestionof(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 提交订单（单人）购买
   */
  @Request({
    server: TrainingController.submitOrder,
  })
  public submitOrder(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 分组
   */
  @Request({
    server: TrainingController.getGroups,
  })
  public getGroups(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 启动分组
   */
  @Request({
    server: TrainingController.group,
  })
  public group(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 清除分组
   */
  @Request({
    server: TrainingController.clearGroup,
  })
  public clearGroup(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 培训三人行订单
   */
  @Request({
    server: TrainingController.submitGroupOrder,
  })
  public submitGroupOrder(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 获取正在拼团的订单
   */
  @Request({
    server: TrainingController.getPendingGroupOrders,
  })
  public getPendingGroupOrders(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 获取全部单个订单(admin)
   */
  @Request({
    server: TrainingController.getAllSingleOrders,
  })
  public getAllSingleOrders(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 获取全部拼团的订单（admin)
   */
  @Request({
    server: TrainingController.getAllGroupOrders,
  })
  public getAllGroupOrders(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
  /**
   * 从培训中移出学员
   */
  @Request({
    server: TrainingController.removeStudent,
  })
  public removeStudent(
    params?: RequestParams | { [key: string]: any }
  ): Observable<any> {
    return RequestParams.create(params).request();
  }
}
