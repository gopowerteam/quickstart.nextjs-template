/**
 * This file is generated by the RequestConfigGenerator.
 * Do not edit.
 */
import { RequestMethod } from '@gopowerteam/http-request'

// 控制器名称
const controller = 'training'
const service = 'e-learning'
const gateway = 'default'

export const TrainingController = {
    // 活动详情
    getTrainingDetail: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}',
        action: 'getTrainingDetail',
        type: RequestMethod.Get
    },
    // 更新活动
    update: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}',
        action: 'update',
        type: RequestMethod.Put
    },
    // 用户签到
    trainingSignIn: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/signIn',
        action: 'trainingSignIn',
        type: RequestMethod.Put
    },
    // 更新活动状态
    changeStatus: {
        gateway,
        service,
        controller,
        path: '/api/training/status/{id}',
        action: 'changeStatus',
        type: RequestMethod.Put
    },
    // 活动列表(全部)
    getTrainings: {
        gateway,
        service,
        controller,
        path: '/api/training',
        action: 'getTrainings',
        type: RequestMethod.Get
    },
    // 创建活动
    createTraining: {
        gateway,
        service,
        controller,
        path: '/api/training',
        action: 'createTraining',
        type: RequestMethod.Post
    },
    // 学员例表
    getAllStudent: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/student',
        action: 'getAllStudent',
        type: RequestMethod.Get
    },
    // 增加临时学员
    addStudent: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/student',
        action: 'addStudent',
        type: RequestMethod.Post
    },
    // 获取全部的问题
    getAllQuestions: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/question',
        action: 'getAllQuestions',
        type: RequestMethod.Get
    },
    // 给培训增加提问
    postQuestionof: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/question',
        action: 'postQuestionof',
        type: RequestMethod.Post
    },
    // 提交订单（单人）购买
    submitOrder: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/order',
        action: 'submitOrder',
        type: RequestMethod.Post
    },
    // 分组
    getGroups: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/group',
        action: 'getGroups',
        type: RequestMethod.Get
    },
    // 启动分组
    group: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/group',
        action: 'group',
        type: RequestMethod.Post
    },
    // 清除分组
    clearGroup: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/group',
        action: 'clearGroup',
        type: RequestMethod.Delete
    },
    // 培训三人行订单
    submitGroupOrder: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/groupOrder',
        action: 'submitGroupOrder',
        type: RequestMethod.Post
    },
    // 获取正在拼团的订单
    getPendingGroupOrders: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/grouporders',
        action: 'getPendingGroupOrders',
        type: RequestMethod.Get
    },
    // 获取全部单个订单(admin)
    getAllSingleOrders: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/all/orders',
        action: 'getAllSingleOrders',
        type: RequestMethod.Get
    },
    // 获取全部拼团的订单（admin)
    getAllGroupOrders: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/all/grouporders',
        action: 'getAllGroupOrders',
        type: RequestMethod.Get
    },
    // 从培训中移出学员
    removeStudent: {
        gateway,
        service,
        controller,
        path: '/api/training/{id}/student/{sid}',
        action: 'removeStudent',
        type: RequestMethod.Delete
    }
}
